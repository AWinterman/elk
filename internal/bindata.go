// Package internal Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// template/http/create.tmpl
// template/http/delete.tmpl
// template/http/handler.tmpl
// template/http/helpers.tmpl
// template/http/list.tmpl
// template/http/read.tmpl
// template/http/relations.tmpl
// template/http/update.tmpl
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateHttpCreateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x6f\x6f\xdb\xb6\x13\x7e\xef\x4f\x71\x3f\xc2\xf8\x41\x0e\x6c\x6a\xaf\x03\x14\x43\xd1\x64\xad\xb1\xb6\xe9\x6a\x0f\x7d\x51\x14\x08\x6d\x9e\x24\x26\x34\xa9\x90\x54\x1c\xd7\xd3\x77\x1f\x48\xca\x7f\x24\xcb\x59\x97\x0d\x98\x81\x20\x0e\x73\xbc\x3f\xcf\xdd\xf3\xf0\xb6\xdb\xf4\x02\x72\xed\x36\x25\x5e\x02\x2a\x97\x6b\x2a\x74\x8a\xca\xf9\x9f\x65\x9a\xa3\xa2\x6f\x0d\x2b\x0b\xb8\x48\xeb\x7a\x30\xd8\x6e\x81\x63\x26\x14\x02\x29\x9c\x2b\xd3\xa5\x41\xe6\x90\x40\x5d\x0f\x00\x00\xb6\xdb\x09\xac\x85\x2b\x00\x9f\x1c\x2a\x0e\x43\x20\x9f\xd8\xf2\x9e\xe5\x48\xe2\x05\x02\x93\xc6\x34\x9a\x83\xc3\x55\x29\x99\xf3\xfe\x90\x71\x34\x04\xe8\xc1\x19\x78\x1f\x3e\x6c\xf3\xe7\xb0\xbc\xcf\xe1\xf2\x15\x2c\x98\x45\x18\xd2\x37\x5a\x65\x22\xa7\x4d\x84\xa3\x6b\x86\xa9\x1c\x61\xa8\xbc\xed\x90\x7e\xd4\x1c\x2d\x1c\x85\x4d\x53\xf8\xc4\x36\x52\x33\x0e\x3a\x03\xb6\xf7\x5c\xd7\xd4\x7f\x55\xf4\x23\x5b\x79\x77\x10\xab\x03\x83\x0f\x15\x5a\x47\xf7\x0e\x3c\x5a\xd0\x32\x7d\x13\x2c\x3f\x47\x43\xb0\xce\x54\x4b\x07\xdb\xfd\x85\x98\x57\x7a\x01\xf3\x9b\xab\x9b\x4b\x78\xc7\x1e\x85\xca\x81\x49\x09\xa5\x16\xca\xa1\xb1\x50\xa0\x41\xb0\x88\x2b\x0b\x4a\x3b\x30\x22\x2f\x1c\x85\x0f\x6c\xb3\x40\x70\x85\xb0\xb0\x64\x0a\x16\x08\x5c\x2b\x04\xa1\x80\x29\xed\x0a\x34\xb0\x66\x1b\xa0\x94\xc6\xfe\xb4\xe3\xed\x70\xc8\x02\x0e\x8a\xfe\x22\x50\x72\xdb\xea\xc0\x91\xf1\x30\xa3\xb3\x90\x77\x30\xf3\xe5\x5f\xc4\xd3\xf9\xa6\x44\xff\x2f\x9f\x72\x5d\xc3\xed\x9d\xd5\xea\x92\x6c\xb7\x20\x14\xc7\x27\x48\x6c\x29\x85\x83\xc4\xb1\xfc\xbd\xd6\xf7\x55\x79\xf0\x34\x67\x39\x10\x6f\x4e\x46\x40\xc6\x64\x04\x3f\x41\x5d\x93\x9e\xe0\xcd\xd4\x3c\x32\x29\x38\x73\x42\xab\x39\xcb\xad\xf7\xf3\x5a\x29\xed\xc2\x89\xa5\xd7\xf2\x1e\xc8\x61\xe0\x76\xd6\x18\x72\xf1\x53\x43\xf6\x13\x73\xdb\x45\xc2\x1f\x77\xeb\x3e\x00\x84\x0d\x40\xd7\x3c\xc7\xf3\xf8\x60\x07\x1f\x8f\x40\xe6\x8f\x7f\x57\xe2\xa1\xf2\x53\xe0\x01\x43\x69\xfd\xd7\xaf\xdf\xf6\xc9\xc4\xbb\x01\xc5\xe9\xd5\x0b\xd0\xc4\x7f\x09\x4d\x3c\x45\xb3\x2a\xf9\x4b\xd1\x3c\x02\xa9\x21\x68\x43\xad\x48\x85\x86\x3b\x16\x18\x28\x5c\x9f\xa7\x18\x53\x1c\xac\xd3\x06\x2d\x08\xe7\xe7\xda\x15\x08\x9c\x39\xe6\x39\x7e\x60\x5c\x56\xa9\x25\x24\x45\x9b\x74\xef\x98\xe2\x12\xcd\xa8\x09\x99\xac\xc1\x4b\x0c\xfd\x8c\xb6\xd4\xca\xe2\x17\x23\x1c\x9a\x31\x18\xb8\x68\xce\x03\x3b\x47\x1d\x5e\x4a\xdf\xfc\x82\x4a\x9d\xd3\x2f\xc2\x15\xc9\x77\x56\x36\xfd\x49\xc8\x0a\x5d\xa1\x39\x19\x03\x89\x21\xc8\x68\xd4\xba\x9b\xa6\xf0\x16\x5d\xc8\xb9\xd4\xd6\x85\xc4\x69\xcb\xe2\x91\x19\xe0\xcf\x68\xc5\xa0\xdb\xba\x63\x41\x94\x25\x9a\x34\xe8\x2c\xc7\xa5\xe6\x38\x61\x8a\x4f\x76\x8d\x9a\x34\xb2\x34\x59\x68\xbe\x21\x5e\xed\xba\x83\x9b\xa6\x30\x63\x8f\xb8\x87\xb4\x9d\xd9\x22\xd6\xbd\x94\x02\x95\x6b\x77\x85\x36\x80\x9e\x14\x1b\xe5\x6b\x5d\x30\x07\x6c\xa1\x2b\x07\x56\x8a\x25\x42\x16\x85\xc5\xf9\xf3\xc2\x47\x5c\x56\xd6\xe9\x15\xac\x98\xb1\x05\x93\x12\x8d\xfd\xf9\xe5\xda\x24\x32\xe0\xb4\x57\xa0\xfe\xf7\x0a\x94\x90\x9d\x7e\xee\xeb\xa3\x33\x74\x7d\xd7\x92\x8b\x7e\x77\xa3\x13\x37\x27\x7a\xf1\x4f\x65\x64\x5f\x4a\x57\x4b\x9e\x2f\xa5\xab\x34\x7d\xae\x0f\x65\x47\xff\x1f\xaa\xc8\xf4\x19\xba\xa3\x9a\xbb\x71\x4f\x6b\xde\x55\xea\x65\xec\xef\xc4\x79\xcd\x03\xb6\xfd\x61\x28\xa5\xe7\x22\x4d\xba\x6a\xb2\xfb\xfc\x10\xf8\x7e\xc4\xbd\x7a\x78\xe5\x38\x55\x0d\xff\xc1\x31\xa0\x31\x61\x6b\xa0\x9e\x0d\x89\xf1\x7b\x83\xc3\x27\x97\x74\xc8\x2c\xb2\x60\x79\xb6\x13\x92\x5e\x1b\xa3\x4d\x42\xd0\xff\x02\x1b\x1f\xf1\x23\xe2\xfc\x01\xf7\xb8\x60\x0b\xaf\x9d\x63\xf0\x32\x12\xed\xd1\x98\xd1\x69\xf5\x06\x15\x47\x43\xa7\xfe\xf5\x57\x4c\xce\xd0\x3c\xa2\x89\x17\xd6\x63\x30\x63\x9f\x44\xdf\x2d\x57\x19\x35\x38\x8f\x53\x9a\xc2\x67\x0c\xab\x0d\x2a\x67\x36\x6d\x2c\x1e\x9e\xa1\xfc\x6f\x15\x9a\x4d\x32\xa2\x5f\xfc\x22\x92\xb4\xaa\x92\x7a\x8d\xc6\xdb\x4c\xaf\x12\x6c\xae\x4d\xaf\xba\x93\x34\x1a\x9c\x68\x59\x5c\x05\x3d\x1b\xe6\xfa\xbd\xcf\x69\xa8\x8e\x5f\xf0\x93\xea\xd2\x14\xae\x59\x8e\x06\x62\x01\x81\x46\x41\x54\x98\x89\x5b\x98\x30\xc8\x41\xab\xdd\x62\xa6\x4b\x34\x61\xf8\x68\xdf\x83\x4d\xbb\x21\xce\x0c\x5b\x33\x21\xaf\xe0\x81\xde\x28\xb9\x69\x0f\xc8\x0f\xea\xb3\x09\x98\xa7\x61\x32\x26\x85\x7f\x97\x84\xca\xfd\x2e\x3b\xa9\xeb\xb6\x8f\xbb\xfd\x3c\xda\x02\x8d\xc8\x32\xfa\x21\xaa\x64\xf2\xff\xdd\xc1\x4d\x19\x9e\xe8\xd3\x09\x9c\xaa\xa5\xac\x38\x5e\xaf\x4a\xb7\x99\xb3\xfc\x12\x9c\xa9\x70\x7c\x62\xf6\xd6\xe8\xaa\xb4\x97\xf0\xf5\x9b\x0d\xef\xd8\x39\x51\x69\x1a\x34\x54\xdd\xc5\x60\xb6\x2c\x70\xc5\x9a\x57\x20\x7a\x7b\x56\x0b\xfc\xaa\x70\xa7\x85\x82\x24\x06\x9c\x85\x57\x81\x8e\xe0\x96\x8c\xc9\x6d\xef\x96\xb2\xef\xc7\x5f\xe9\x0c\xe9\x27\xd8\xb3\x6a\xd2\xe7\xaf\x6e\xe3\x54\x8f\x01\x5f\x48\x7f\x8b\x46\x30\x29\xbe\x07\xbc\x20\xb4\xbc\xe1\xfb\x54\xb9\x84\xec\xf9\xd1\x30\x8b\x8c\xe1\x3c\x69\xfe\x33\x9d\x90\x74\xaa\x32\x9d\xf4\xa3\xdb\x04\x45\xfe\xe2\xba\xda\x19\x35\x35\xdc\xfc\xda\xa4\x7c\x37\x1a\xb4\xb3\x3a\xec\x94\xfb\x6f\x7f\x06\x00\x00\xff\xff\x53\x38\x3c\xe9\x99\x0e\x00\x00")

func templateHttpCreateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpCreateTmpl,
		"template/http/create.tmpl",
	)
}

func templateHttpCreateTmpl() (*asset, error) {
	bytes, err := templateHttpCreateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/create.tmpl", size: 3737, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpDeleteTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x41\x6f\xf3\x36\x0c\xbd\xe7\x57\x70\x42\x0e\x76\x90\xc8\xa7\x5d\x3a\xf4\xb4\x74\x6d\x2e\xdd\xb0\x16\xeb\x59\xb1\x68\x5b\xa8\x2c\x79\x34\xdd\xb4\xf3\xf2\xdf\x07\xda\x86\x9b\x34\x29\x76\xf9\x04\x18\xb1\x94\xc7\x47\xbe\x47\x5a\x7d\x9f\xad\xa0\x8c\xfc\xd1\xe0\x0d\x60\xe0\x32\x6a\x17\x33\x0c\x2c\x4f\x9e\x95\x18\xf4\x3d\x99\xa6\x82\x55\x76\x3c\x2e\x16\x7d\x0f\x16\x0b\x17\x10\x54\xc5\xdc\x64\x16\x3d\x32\x2a\x38\x1e\x17\x00\x00\x7d\xbf\x81\x83\xe3\x0a\xf0\x9d\x31\x58\x58\x82\xfa\xc3\xe4\xaf\xa6\x44\x35\x06\x28\xd8\x4c\xd0\x11\x0e\x8c\x75\xe3\x0d\x0b\x1f\x1a\x8b\xa4\x40\x7f\x92\x81\x70\x4c\x3b\x57\x37\x91\x18\x54\xe9\xb8\xea\xf6\x3a\x8f\x75\x56\xc6\x4d\x5e\xb9\x4c\x9e\xb7\x9f\x15\x0c\x52\x9e\x2b\xd7\x82\x6b\x21\x20\x5a\xb4\x50\x44\x82\x96\xbb\xc6\x59\x78\xda\xfd\x05\xd4\x79\x9c\x94\x4c\x19\x96\xcd\x6b\x09\x37\xb7\xb0\x37\x2d\xc2\x52\xff\x1a\x43\xe1\x4a\x3d\x15\x7d\x52\x09\x99\x50\x22\x2c\x83\x60\x97\xfa\x31\x5a\x6c\xe1\x44\x49\x96\xc1\x76\xb0\x02\x08\xeb\xf8\x86\x2d\x98\x99\xfd\x78\xd4\xf2\x1a\xf4\xa3\xa9\x85\x12\x0a\x8a\x35\x70\x85\x60\x0d\x1b\x49\xac\x67\x9e\xa2\x0b\x39\x24\x15\x9c\x05\x3c\x98\x60\x3d\x52\x3a\xa5\x48\x0e\x20\x56\xea\x3f\xb1\x6d\x62\x68\xf1\x85\x1c\x23\xad\x81\x60\x35\x9d\xff\xdd\x61\xcb\x29\xf4\x33\xad\x2c\x2f\xa5\x57\xda\xc7\x52\xbf\x38\xae\x92\x7f\x4c\xa3\x9f\x98\x5c\x28\x13\x55\x23\x57\xd1\xaa\x35\xa8\x31\x85\x4a\xd3\xb3\x58\xe9\xeb\x69\xa7\x7c\x83\x94\x0d\x03\xe0\xec\x46\xe4\x6c\x3a\xf2\x4a\xec\x39\x6d\xef\xd0\xb6\x02\x90\x68\x4c\x9d\x7b\x87\x81\xcf\xcd\xd0\x63\xc2\xdf\x03\xee\xb6\x49\xdf\x0b\x7e\x19\xf4\x6e\xab\x1f\x4c\x7b\x1f\x9f\x3f\x1a\x01\x8d\x11\xbb\xad\x9e\xf6\x89\xb3\xa9\x4c\x87\x6f\x65\xe7\xec\x3c\x29\xa9\xbe\x7b\xc7\x3c\x21\xe9\x23\xe3\x3b\x27\x69\xfa\xcb\x90\xff\xa7\x5b\x08\xce\x7f\x71\x44\x56\x7b\x70\x9c\x57\x82\xd1\x89\x7c\x04\x5f\x5d\x93\x95\xcb\x6c\xac\xa4\xf4\xc7\xc8\xbf\xc5\x2e\xd8\x3b\xa2\x48\x37\x17\x40\x59\x75\x3b\xcc\x53\xcb\xe4\x9a\xbb\xc0\x03\x32\x41\xa2\xf4\x2a\xda\xeb\x5d\x28\x62\x52\xb7\xe5\x1a\xa4\x21\xbb\xc0\x89\x9a\xe5\x4e\x1e\xa9\x35\x38\x9b\x8e\x80\x4f\xbe\xeb\x84\x84\xc1\x22\xcd\x85\x26\x87\x35\xd0\x1a\xd4\x89\xe7\xff\xc2\x2b\xee\xcd\x5e\x06\x31\x44\x86\x42\x60\xea\x92\xcc\x62\x61\x3a\xcf\xd7\x45\xfa\xa9\x0e\x85\xf2\x03\xc3\x2d\xe0\x42\x09\xd7\xd3\x0c\xf3\x6e\xf7\xea\xc7\x4a\xdc\x05\x46\x0a\xc6\x3f\x21\xbd\x21\x8d\x41\xa3\xda\xe0\xfc\x65\xe4\xf1\xe2\x84\x90\x3b\x0a\x8b\xef\x41\x53\x73\xbe\x31\x6f\xbc\xfa\xec\xff\xab\x3a\xaf\x65\x6e\xd0\x30\xa2\x81\x93\xc3\xe7\xff\x5f\xef\xbd\xf9\xed\xbf\x00\x00\x00\xff\xff\x6e\x33\x49\x6d\xa6\x05\x00\x00")

func templateHttpDeleteTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpDeleteTmpl,
		"template/http/delete.tmpl",
	)
}

func templateHttpDeleteTmpl() (*asset, error) {
	bytes, err := templateHttpDeleteTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/delete.tmpl", size: 1446, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHandlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x5d\x6f\xdb\x36\x14\x7d\xf7\xaf\x38\x13\x82\x42\x32\x1c\x2a\x7d\x18\x30\x04\xf1\xcb\xb2\xac\x1b\xd0\x05\x41\xda\x6d\x0f\x45\x1f\x18\xe9\x5a\x22\x2c\x93\x02\x49\x25\x5d\x15\xfd\xf7\x81\x1f\x71\x24\x47\x4e\x91\x07\x43\xa2\xef\xb9\xe7\x7e\xf2\xd8\x7d\x9f\x2f\x51\x29\xfb\x5f\x4b\xe7\x20\x69\x2b\xc5\x84\xca\x49\x5a\xf7\x29\xf2\x8a\x24\xfb\xa0\x79\x5b\x63\x99\x0f\xc3\x62\xd1\xf7\x28\x69\x23\x24\x21\xa9\xad\x6d\xf3\x9a\xcb\xb2\x21\x9d\x60\x18\x16\x00\xd0\xf7\xa7\x78\x10\xb6\x06\x7d\xb3\x24\x4b\x9c\x20\xb9\xe1\xc5\x96\x57\x94\x04\x8f\x04\xa7\x11\x1a\xe0\xb0\xb4\x6b\x1b\x6e\x1d\x21\xf1\xd2\x51\xb1\x67\x32\x38\x8e\x78\x12\xbb\x56\x69\x8b\x14\x3e\xe5\xcf\xb5\x30\x10\x06\x92\xa8\xa4\x12\x1b\xa5\x61\x6c\xd7\x8a\x12\x9f\xfe\xfc\x07\xba\x6b\x28\x64\xfc\x14\x29\xa9\x84\xad\xbb\x3b\x56\xa8\x5d\x5e\xa9\xd3\xa2\x16\xb9\xfb\xdc\xff\x9c\x78\x48\xb6\xf0\x8f\x3c\xc7\xaf\xc2\xee\xb8\xd9\xc2\x2a\x14\x4a\x6e\x44\xd5\x69\xc2\x43\x2d\x8a\x1a\x5a\x75\x96\x8c\xb3\x68\xaa\x84\xb1\xa4\x99\xf7\x72\xcd\xc3\x6d\x30\x76\x42\xda\x5f\x02\xd9\xa6\x93\x05\x52\x6d\xa2\x29\x43\xcd\x4d\xaa\xf7\xa7\x3b\xa5\x1a\xf4\xd0\x64\x3b\x2d\xa1\xcd\x3b\x8d\x9f\xd6\x38\xc3\xb0\x78\x2a\xfe\xa4\xdd\x56\x38\x5f\xe3\x8e\x1b\xc2\x09\xbb\xf4\xe9\xb0\xd8\xcf\x51\x93\x34\x97\x15\xe1\x44\x3a\xec\x09\xbb\x56\x25\x19\x8c\x4a\x2f\x94\x34\x16\xe9\xfe\xfc\xc4\x2e\xd9\x35\xdf\x39\x9e\x4b\x4d\x6e\x00\xb1\x82\x35\xde\xe3\xe2\x02\x42\x59\x7e\xdc\xe5\x96\x78\x79\xdc\xfa\x77\x5b\x72\x4b\xc7\xed\xbf\x51\x43\xaf\xd9\x3f\x0a\x63\x0f\xad\xb1\x48\xf2\x45\x4a\x76\x55\x56\x64\x26\xbb\x34\xcb\xe4\x0e\x14\x0e\x8f\x68\xb9\x29\x78\x83\x03\x9f\xb8\x65\x87\x54\xd3\x72\xf7\xad\xb9\xb8\x70\x8d\xc1\x29\xde\xef\xd1\x71\x77\xe2\xfe\x4c\xfc\xfe\x08\xd7\x03\xe1\x9a\x18\xb8\x1b\x80\x42\x77\x25\x54\x4b\x9a\x5b\xa1\xa4\x81\x92\xfb\x61\x0f\x03\x9b\xf8\xb3\x3d\xb3\xdf\xb1\x59\x6e\x63\x75\x57\x58\xf4\x93\xec\x8b\x46\x90\xb4\xee\x6d\x49\xd2\xb2\x4b\x7f\x9c\x20\x1a\x55\xc5\xb7\xe5\x77\xde\xb2\x8f\xaa\xaa\x48\xef\x11\xc3\x73\x4d\x7e\x8d\xaf\xe9\x61\x2e\x78\x5a\x8c\xf9\x57\x68\xc6\x64\x19\x96\xb3\x09\x4f\x33\x8d\xfb\xff\x6e\x0e\xda\xbf\x18\x6e\xa8\xeb\x1c\xc5\xea\x85\xa9\x51\xd5\xb9\x7f\xb2\x7f\x85\xad\x53\x97\xc7\x27\xab\x85\xac\xd2\xe4\x49\xa5\x56\x48\xe6\xc2\x24\x59\x36\xa5\x1b\xe6\xfa\x90\xe7\xb8\x8d\xd7\x3e\xfa\x99\xbd\x0e\x18\xd8\x9a\x50\x91\x74\x43\xa5\x32\xce\x5b\xfb\xd9\x7a\x8b\xb8\x27\x89\xa2\x16\x41\x43\x34\x9b\x76\x37\xad\xe7\x5b\x95\xe1\x2f\xd5\x49\x9b\x6a\xe7\xca\xfc\x12\xea\x15\x46\x8a\x32\x6d\x90\xd8\x40\x1b\xe6\x54\x66\xe6\x7a\x1f\x82\x7d\xef\xd9\x8d\x32\x36\x4d\xf2\x64\x85\x9a\x45\xdc\x91\x4e\xbc\x12\xc0\x89\xc1\x3c\xfd\x07\x72\xec\xbd\x28\x07\x1f\xc1\x03\xdf\xce\x1f\xe4\xe4\x48\x01\xdc\x16\xf5\x38\x46\x04\xbf\x3d\x4a\x10\xa5\xf9\x28\xc1\x36\x0e\x13\xd1\x6f\x0f\xe3\xb4\xed\xb5\x66\x79\x76\x0f\x7a\x85\xfb\x2d\x7a\x78\x24\x8f\x79\x65\x9c\xcb\x0c\x07\xa3\xcc\x47\xae\x43\xe8\xc6\x11\xb2\x17\x54\x3f\x54\xde\xc3\x1f\xfe\xe7\x1f\x52\x63\xb5\x68\xaf\xa4\xbd\xd2\x5a\xe9\x94\xb4\x06\xb9\xb7\xcc\x1b\x64\x35\xca\x3b\x2a\x4a\xf8\xde\xb0\xcf\x5a\xec\x6e\x34\x6d\xc4\x37\xe7\xc5\x82\x7f\xb6\x42\xe2\x85\x24\x09\x49\x8e\x23\x7d\xe7\xed\xef\x82\x9a\xd2\x38\xbc\xc1\x8e\xb7\x5f\x02\xd7\xd7\xf0\xc8\xf0\xe5\xab\x53\x17\x0f\x1a\xc5\x15\x1b\x78\x87\xf5\x1a\x52\x34\x78\x7c\x44\x43\xd2\x73\x64\xee\xbb\xb3\x79\xe1\x93\xa2\x59\xbc\x6c\x8f\x76\x63\xdd\xf1\x2d\xa5\xa3\x58\x2b\x9c\x3d\xb7\xd4\xfd\xe3\xd9\xae\x70\xef\x80\x61\x17\x7c\xf0\x83\x18\x58\x83\xb7\x2d\xc9\x32\xd5\x2b\x8c\x24\xd1\x79\x66\xd9\x5c\xe0\xf8\x77\x24\x76\x65\x3f\x89\xff\x03\x00\x00\xff\xff\x46\xe3\x68\x9b\x28\x0a\x00\x00")

func templateHttpHandlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHandlerTmpl,
		"template/http/handler.tmpl",
	)
}

func templateHttpHandlerTmpl() (*asset, error) {
	bytes, err := templateHttpHandlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/handler.tmpl", size: 2600, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpHelpersTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\xdf\x6f\xdb\x36\x10\x7e\xef\x5f\x71\x23\x82\x55\x0a\x6c\xba\xc5\xde\x5c\x64\x43\xbb\xb4\x83\x81\xa0\xc9\x92\x74\x2f\x45\x1f\x68\xf1\x24\x73\xa1\x48\xe5\x48\x25\x4d\x55\xfd\xef\x03\x29\xc5\x96\x65\x27\xcd\xb6\x6e\x02\x02\x45\xd2\xfd\xfc\xee\xbb\x8f\x6e\x9a\xd9\x21\x14\xd6\xdf\x55\x38\x07\x34\xbe\xb0\x5c\xd9\x19\x1a\x1f\xfe\xb2\x59\x81\x86\x5f\xde\x55\x08\x87\xb3\xb6\x7d\xf6\xac\x69\x40\x62\xae\x0c\x02\x5b\xa1\xae\x90\x66\x2b\xef\xab\x99\xc4\xcc\x4a\x9c\x0a\x23\xa7\x37\x42\x2b\x29\x3c\x4e\x09\xaf\x6b\x74\x7e\xba\xb4\xf2\x8e\x41\xdb\x3e\x03\x00\x50\x39\x20\x11\xcc\x8f\xe0\x4f\x67\x0d\x7f\x8f\xb7\xc7\xd1\x95\x12\xe2\x6f\xac\xbc\x4b\x79\xf7\x9c\xfc\x28\xd3\x57\xd1\xf4\x87\x23\x30\x4a\x43\x13\xdd\xc3\xa5\xf9\x5b\x22\x4b\x09\xc3\x70\x83\x98\x5a\x99\x22\x06\x64\x13\xf8\x22\xaa\xde\x00\x89\xd2\x74\xed\x46\x68\x24\x12\x7f\x23\xe4\x79\x57\x58\x72\x3b\x01\x9a\x00\x53\x26\x96\x1c\xfd\xc1\x79\x52\xa6\x60\x43\x37\x5f\x93\x89\x8f\x5d\x07\x4d\x13\x9a\xc8\x15\x6a\xf9\x47\xd7\xaa\xb2\x26\x84\x54\x84\x12\x0e\x60\xda\x77\x1a\xae\xd9\x0c\x7a\x1b\x04\xbf\x42\x90\xc2\x0b\x3e\xfc\x7a\x79\x7a\x7c\x3a\x87\xdb\x95\xf0\x20\x96\xb6\xf6\xe0\xb4\xca\xb0\x8b\xee\xc0\x87\xf7\x2b\x71\x83\x90\xd5\xce\xdb\x12\x4a\x41\x6e\x25\xb4\x46\x72\xbf\xac\xc3\x20\x91\x0b\x80\x96\xe2\x0a\x93\x52\x54\x1f\xbb\x1e\x3e\x75\xb7\x4d\x27\x4d\x03\x24\x4c\x81\x70\x90\x07\xf3\x03\xfe\xae\xcb\x32\x2c\x78\xd3\xe0\x41\xce\xfb\xd2\x2d\xed\xda\xf4\xa3\x94\xbc\x69\x82\xe5\x85\xa7\x3a\xf3\x31\x1e\xb4\xed\xee\xc8\x46\x6e\x3d\x03\x82\x2f\x3f\x13\xd9\x95\x28\x10\xda\xb6\x8f\xb5\xce\x0a\x6d\x9b\x1c\xee\xcf\xf0\x10\x35\xc6\x57\x80\xe6\x23\x0b\x0d\x19\x89\x9f\x21\x71\x95\x56\x1e\x12\x2f\x8a\x13\x6b\xaf\xea\x6a\x13\xf9\x52\x14\xc0\x22\x83\x52\x60\x13\x96\xc2\x0b\x68\x5b\xf6\x09\x8e\x42\x8c\x9e\x4f\xe9\xde\x3c\xbb\xc0\xec\xc0\x89\x46\x6e\x21\xb8\xe7\x95\xca\x41\xa3\x09\x94\x75\x29\xfc\x0c\x2f\x46\x4d\x69\xbe\x30\xb9\x4d\xd8\xcd\x9a\x71\x90\x0b\xa5\x51\x76\x84\xef\x26\xd9\x79\x73\xce\xb7\x0b\x7d\x88\xf8\xd1\x7a\x64\xb9\xe6\x3a\x0c\xf9\x7e\x5f\x6c\xff\xef\x23\x3a\xa0\xe4\x34\x27\x5b\x4e\x6b\xd2\xeb\x95\x9f\xcd\x60\x71\x0c\xca\xc1\x87\xf3\x13\xa8\x04\x89\x12\x3d\x12\xef\x83\x4f\x23\xd9\xf8\xe2\x98\x2f\xdc\xc2\x78\x18\x62\x22\x27\xf7\x54\x71\x9e\x32\x6b\x6e\xf8\x6b\x6f\x55\x92\xad\x14\xff\x70\x7e\x72\x16\x42\x25\x71\x83\x25\x1b\x2c\x7a\x4f\xb0\xbd\xe4\x18\x69\x47\x81\xde\x07\xe9\x50\x12\x42\xd9\x50\x93\xde\x54\xd8\x6b\xc9\x45\x5c\xa3\x24\x24\x99\xc0\xfe\xd4\x0f\x8b\xce\x63\xf8\x33\x25\xa1\xac\x9d\x87\x25\x82\x30\xa0\x8c\xc7\x02\x09\x0a\x42\xe1\x91\xe0\x0b\x92\x65\x4f\x9c\x8f\x76\xb8\x0d\x5c\xc0\x6c\x6f\xad\x7f\x7f\xa4\x84\xda\x0a\x39\x8b\x80\x4d\x57\xc2\x48\x1d\x04\x72\xa4\xe7\x3b\x60\xbb\x5b\xe5\xb3\x55\x5c\x9e\x24\x1c\x2d\xe9\xe0\x5b\x26\x1c\xc2\x21\x1a\xcf\xdf\x5b\xff\xce\xd6\x46\x46\xe8\xe6\x5b\xbd\x96\xae\xe8\x07\xaf\xaa\xb7\xc6\x6f\xc0\xdd\xb7\x17\xa5\x2b\xba\x19\x2c\x8c\x4f\x58\xd4\x95\xc5\x31\x7f\x2f\xca\x00\x0b\x9b\x00\xf2\xfb\x77\x03\x1d\x69\xdb\xa7\x0d\xee\xbe\xc8\x7e\x6c\xa5\x1b\x68\xaa\xc4\x5c\xd4\xda\xcf\x1f\x23\x59\x8e\x3e\x5b\x05\x96\xc5\x1a\x62\x51\x5f\xe1\x0a\x97\x62\x19\xb4\x32\xf2\x4e\x2e\xd9\x7f\x57\xff\xc2\x78\x24\x23\xf4\x05\xd2\x0d\x52\x67\xdc\xb5\x62\x94\x4e\x47\x6c\x82\xf1\x91\xf7\x6d\x82\x54\xa2\x50\x26\x6a\xd2\x9a\x15\x55\x50\xf4\xf9\x11\xbc\xbc\xe7\x48\x24\x24\x05\x3a\xf2\xdf\x6b\xa4\xbb\x24\xe5\xbf\xa1\x4f\x58\x30\x64\xe9\x2b\x90\x81\x41\x8c\x0d\x48\x12\xbe\x74\xeb\x3f\xda\x7e\xf9\xd4\x4d\xef\x14\xb3\x9b\x41\x25\xc8\x85\x11\x5c\x87\xe4\x9b\x15\x87\xe7\x21\xcd\xf3\xd1\xa6\xc7\xa2\x26\x20\xff\xe9\x5e\xc7\xee\xbf\xc3\x66\xf7\x1b\xe6\xb1\x74\x67\x48\x67\x3d\xa6\x3f\xbd\xf8\x16\xa8\x43\x8f\xfd\xe0\x0e\x2d\xfe\x07\x90\x87\xe9\xc6\x60\x6f\x15\xfb\x2f\x40\xdf\x82\xe9\xbb\x81\x8f\x6e\x7d\x04\x5d\xf3\x13\x55\x2a\x9f\x0c\x13\xa5\xfc\x34\xcf\x1d\xfa\x24\x89\x33\x9f\xc2\xcb\x14\x0e\x61\xdb\xe2\xb5\xd6\x09\xf1\x5f\xad\xf1\xf8\xd9\x27\x7d\x3b\x0f\x81\xfa\x74\xe9\xf8\x0a\x95\xae\x49\xe8\x1d\x09\x79\xe4\xb7\xef\x13\x95\x60\xff\xfe\xff\x15\x00\x00\xff\xff\x32\x73\x6c\xe8\x28\x0c\x00\x00")

func templateHttpHelpersTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpHelpersTmpl,
		"template/http/helpers.tmpl",
	)
}

func templateHttpHelpersTmpl() (*asset, error) {
	bytes, err := templateHttpHelpersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/helpers.tmpl", size: 3112, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpListTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\xdf\x6b\xe4\x36\x10\x7e\xcf\x5f\xf1\x55\x2c\xc5\x1b\x1c\xf9\x7d\x21\x0f\xa5\x84\x6b\xe8\xf5\xae\xbd\x1c\xdc\x43\x29\x9c\xb2\x1a\xdb\x6a\xb4\x23\x67\x24\x27\xcd\x39\xfe\xdf\x8b\xbc\x4e\xb2\xce\xa6\x3d\x81\xc1\xab\x9d\xef\x87\x67\x3e\x69\x18\xaa\x53\x34\x21\x3d\x74\xb4\x01\x71\x6a\x82\x76\xa1\x22\x4e\xf9\xd9\x56\x0d\xb1\x7e\x27\xa6\x6b\x71\x5a\x8d\xe3\xc9\xc9\x30\xc0\x52\xed\x98\xa0\xda\x94\xba\xca\xbb\x98\x14\xc6\xf1\x04\x00\x86\xe1\x0c\xf7\x2e\xb5\xa0\x7f\x12\xb1\xc5\x0a\xea\x77\xb3\xbd\x31\x0d\xa9\x7d\xb9\xc2\xd9\x5c\xba\x2f\x47\xa2\x5d\xe7\x4d\xca\x6c\x64\x2c\x89\x82\x7e\x21\x43\xe6\xc8\xa2\xf3\xcf\x55\x77\xd3\x60\x73\x8e\x6b\x13\x09\x2b\xfd\x73\xe0\xda\x35\x7a\x56\x38\x80\x89\xe1\x86\xb0\xe2\x5c\xbb\xd2\x1f\x82\xa5\x88\x03\xd9\xaa\xc2\x27\x32\x16\x35\xa5\x6d\x4b\x11\xa9\xa5\x67\xf6\x71\xd4\xf9\x95\xf5\x07\xb3\xcb\x94\x70\x96\x38\xb9\xda\x91\xc5\xf5\x03\x0c\x1a\x77\x47\x8c\x5e\xfc\x59\x67\xc4\xec\x28\x91\xa0\x96\xb0\xcb\x2c\x87\x0a\xd6\x24\x33\xf9\x34\x6c\x21\x94\x7a\xe1\x08\x97\x90\xc2\xa4\xb7\xf5\x8e\x38\xe9\x67\x44\xdd\xf3\x16\x45\x8b\xd3\x85\xfa\x2f\x86\xad\x27\x59\xe3\xbd\x8b\xa9\xb8\x47\x6e\xa1\xfe\x44\xb1\x0b\x1c\xe9\x8b\xb8\x44\x52\x42\x70\x3a\xef\xdf\xf6\x14\xd3\x1a\xc3\x33\x6b\x5e\x3e\x77\xa1\xd5\x3e\x34\xfa\x8b\x4b\x6d\xf1\xcd\x74\xfa\x2a\x89\xe3\xa6\x50\x3b\x4a\x6d\xb0\xaa\x84\xca\x02\x6a\xbd\x5e\x20\x6f\xf7\xc8\xd9\xea\xc2\x98\xfe\xa3\x27\x79\x28\x96\xf5\x2f\xd3\xb7\x0d\xc5\xcf\xe1\x7d\x30\x36\x4f\x41\x2d\x32\x72\xb8\xaa\x0a\x17\xa6\x21\x81\xcf\xa5\x13\x0c\xa9\x35\x09\x46\x08\x42\xb7\xbd\x13\xb2\x08\x8c\xcc\x80\xd0\x91\x98\xe4\x02\xeb\x23\xa2\x61\x78\xc9\xcd\xa1\x9d\x39\x40\x87\xdb\x77\x46\x40\x32\x3d\x41\x8e\x00\x87\x79\xf4\x1d\x49\x35\x85\xbc\x33\x8d\xe3\x49\x5a\xe5\x0f\x3a\x7b\xca\xe4\xd3\xb2\xe5\x44\xb9\x39\x47\x6c\x49\x5c\x5d\xeb\xdf\x8c\xc4\xd6\xf8\xe2\xc7\xa7\x8d\x8f\x5d\x86\xc7\xe1\xc8\xfa\x25\x6f\x7d\x6f\xe9\x62\xd7\xa5\x87\xcf\xa6\xd9\x20\x49\x4f\xe5\x51\xd9\x3b\x09\x7d\x17\x37\xf8\xf3\xaf\x38\x0d\xef\x98\x68\x31\x82\x15\xeb\x9f\x98\x43\x9a\x4c\x47\x7d\xe1\x6f\xae\xb6\x2d\xed\x8c\xce\x83\xde\x73\x2d\x8e\xe2\xeb\xa5\x86\x01\x7f\x07\xc7\x28\xf6\x72\x57\xde\x6d\x09\x7a\x8d\xaf\xaa\x54\x5f\x31\x8e\xea\x3f\xf5\xc9\x47\xfa\x2e\xf7\x53\x94\x1e\x71\x43\xd7\xe6\xfa\xff\x09\xd9\xbe\xc9\x37\x2e\xbb\x34\x96\xa0\xb8\x4c\xa4\xab\xa7\xb9\xfc\x70\x0e\x76\x1e\xc7\x2d\xf3\xfa\x22\xa7\xa0\x50\x91\xc4\x19\xef\xbe\x4d\xed\xda\x47\x43\x95\xc8\x47\x65\x5f\x40\x22\xaf\x0e\x47\x5e\x42\x6c\x49\xf4\x25\x27\x12\x36\xfe\x8a\xe4\x8e\x64\x0f\xb8\x2f\x21\x65\x56\x7d\x0b\x95\x2f\x83\xa5\xf5\xe5\x89\xd5\x97\x5c\x87\xe2\xad\x36\x3d\xa2\xf3\xbd\x18\x9f\x6f\xa6\xbd\x3a\xd9\xd9\xe8\x25\xa7\x42\x99\x5d\xe8\x39\xa9\x12\x9e\xb8\xa0\xb8\x7e\x65\x7a\x36\xfc\xf1\xd7\xd9\x9f\x7d\xf9\xfb\xf5\x9d\xfb\xfc\xf6\x6f\x00\x00\x00\xff\xff\x61\xb6\x32\x42\x20\x06\x00\x00")

func templateHttpListTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpListTmpl,
		"template/http/list.tmpl",
	)
}

func templateHttpListTmpl() (*asset, error) {
	bytes, err := templateHttpListTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/list.tmpl", size: 1568, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpReadTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x6f\xe3\x36\x13\xbe\xe7\x57\xcc\x2b\x18\x2f\xa4\xc0\xa6\x4f\xbd\x04\xd8\x43\xbb\x49\xb3\x46\xdb\xa4\x5d\x07\xcd\xa1\x28\xb0\xb4\x38\x92\xd8\x50\xa4\x32\x1c\x25\xeb\x75\xfd\xdf\x8b\x91\x14\xc5\x1f\xd9\x0d\x5a\x84\x80\x11\x4b\x7c\xe6\x99\x79\xe6\x2b\xde\x6c\xe6\xa7\x50\x06\x5e\x37\x78\x06\xe8\xb9\x0c\xca\x86\x39\x7a\x96\x4f\x3e\x2f\xd1\xab\x4b\xd2\x4d\x05\xa7\xf3\xed\xf6\xe4\x64\xb3\x01\x83\x85\xf5\x08\x49\xc5\xdc\xcc\x09\xb5\x49\x60\xbb\x3d\x01\x00\xd8\x6c\x66\xf0\x68\xb9\x02\xfc\xcc\xe8\x0d\x4c\x20\xf9\x55\xe7\x77\xba\xc4\xa4\x87\x27\x30\x1b\xa0\x3d\x1c\x18\xeb\xc6\x69\x16\x36\xd4\x06\x29\x01\xf5\x4c\x06\xc2\x31\x3c\xd9\xba\x09\xc4\x90\x94\x96\xab\x76\xa5\xf2\x50\xcf\xcb\x30\xcb\x2b\x3b\x97\xcf\xc3\x77\x09\x74\x42\x6e\x2a\x1b\xc1\x46\xf0\x88\x06\x0d\x14\x81\x20\x72\xdb\x58\x03\xcb\xc5\xef\x40\xad\xc3\x41\xc7\xe0\x61\xd2\xdc\x95\x70\xf6\x0e\x56\x3a\x22\x4c\xd4\xfb\xe0\x0b\x5b\xaa\x21\xe8\x9d\x48\x48\xfb\x12\x61\xe2\x05\x3b\x51\x57\xc1\x60\x84\x1d\x25\xf3\x39\x7c\x44\x6d\xa0\x40\xce\x2b\x8c\xc0\x15\x8e\xec\xdb\xad\x92\xaf\x5e\x5d\xe9\x5a\x28\xc1\x1a\xf4\x6c\x0b\x8b\x06\x56\x6b\xd0\x50\xda\x07\xf4\xd0\x92\x9b\x35\x9a\x74\x8d\x8c\x04\x05\x85\x5a\x58\x76\x3d\x18\xcd\xba\x8b\x53\x7b\x03\x84\xde\x20\x45\xb0\x0c\x1c\x3a\x7f\xb9\xb3\xe8\x59\x8d\x16\x45\xeb\x73\x48\x2b\x38\xdd\xf3\xfe\x41\x7b\xe3\x90\xb2\x2e\xde\xf4\x11\xa4\x2a\xea\x23\xc6\x26\xf8\x88\xb7\x64\x19\x69\x0a\x04\xa7\xc3\xfb\xfb\x16\x23\x67\xb0\x19\x59\xe5\x38\xc9\x42\xa5\x5c\x28\xd5\xad\xe5\x2a\xfd\xa2\x1b\xb5\x64\xb2\xbe\x4c\x93\x1a\xb9\x0a\x26\x99\x42\x22\x0e\x92\x2c\xdb\xb3\x94\x06\xd9\x2d\xb9\x6b\x90\xe6\x5d\x1f\x59\x33\x13\xcd\xb3\x96\x5c\x22\x79\x9e\x3d\x15\x69\x27\x01\xef\x09\xc5\x4e\xc4\xde\xb7\x48\x6b\x51\xde\x65\x7c\xcc\xf7\x28\x73\xcf\xf4\xbe\x8f\x77\x48\xd0\x1e\x4e\xfd\x26\x44\x69\xa6\x6e\x2b\x24\x4c\x77\xee\xfe\x06\x17\x1e\x91\x04\xb3\x38\x97\x0b\x5b\xc8\xdd\xe2\x5c\x7d\xd0\xf1\x32\xdc\xac\x1b\xb1\xef\x0d\x16\xe7\x6a\x78\x4e\xad\xc9\xa4\x71\x5d\x94\x27\x6b\xc6\x26\xce\xb2\x93\xa3\x4c\xf4\xa3\x62\x4a\x8c\x37\xe1\xe7\xa0\x8d\xe8\x4e\xf6\x06\xea\x20\x01\x17\xba\x44\x02\x27\xd0\xce\x0c\xb8\xd2\x0c\x9a\x10\x08\xef\x5b\x4b\x68\x20\x78\x10\x06\x08\x0d\x92\x66\x1b\xbc\x3a\x22\xda\x6c\x9e\x87\x6c\x37\x9c\x9d\x69\x7b\x3a\x38\x05\x24\x92\xf4\xdd\xab\x6b\xef\xd6\x29\xc9\x88\x30\x7e\xe6\xf4\xa0\xb2\xb6\xe8\x90\xff\x7b\x07\xde\xba\x83\x7e\x91\x13\x1f\xad\x14\x0a\x89\x54\x2a\xbb\xe6\xb0\xa7\xe4\xe4\xd2\xdc\xa7\x52\xa3\xab\xc0\x3f\x86\xd6\x9b\x0b\xa2\x40\x67\x47\x40\x39\x75\xec\x06\x37\x32\xd9\xe6\xc2\x73\x87\x4c\x91\x28\x7b\x11\xed\xd4\xc2\x17\x21\xad\x63\x39\x05\x69\xd7\x85\xe7\x34\x19\x8b\x37\x34\x43\x32\x05\x6b\xb2\x1e\xf0\xcc\xf7\x32\x61\x3f\x7f\x63\xa0\xe9\xe3\x14\x68\x2a\x41\x1d\xc3\xf7\x64\x2d\xad\x2f\x5b\xa7\xe9\x0d\x95\xf5\x80\x37\x97\xf6\x83\x36\xc3\xfc\x7f\x4b\x9c\xc1\x42\xb7\x8e\x5f\x56\xf2\x14\x5b\x82\xf2\xa7\x9f\x55\xeb\x4b\xd8\x1b\xb3\x3b\x5c\xe9\x95\xec\xc5\x6e\xe7\x99\x55\xf2\xb6\x32\x16\x9e\x91\xbc\x76\x4b\xa4\x07\xec\xd3\x3e\xe8\xf1\xd6\x1d\x5b\x1e\xcf\x1d\x21\xb7\xe4\x4f\xbe\x0e\x32\xe3\x90\xc4\x0a\xc9\x16\x85\xfa\x45\x53\xac\xb4\x4b\xff\xff\xf4\xe2\xba\x91\x51\x8c\xc7\x2d\xbf\xf0\xb9\x6b\x0d\x5e\xd4\x0d\xaf\x6f\x74\x79\x06\x4c\x2d\x4e\x8f\x60\x97\x14\xda\x26\x9e\xc1\x1f\x7f\xc6\x6e\xcf\x1e\x13\xc1\xee\x4e\x99\x78\xf5\xbd\xf7\x81\xbb\x05\x10\xd5\x85\xbb\x5b\xe6\x15\xd6\x5a\xc9\x4e\xee\xb9\xf6\xfe\x11\x1f\x1e\xc9\xfb\x5f\xc1\x7a\x48\x7b\x77\x4b\x67\x73\x04\x95\xc1\xa7\x64\x9a\x7c\x92\x3a\x7c\xd5\x7f\xb7\xf9\x5e\xe3\x3e\x2e\xfe\x37\x08\xbd\x79\x91\x6f\xbb\x9f\xa5\xed\x14\xf0\xdf\x6d\xa4\xb1\x39\x23\x92\xd5\xce\x7e\xe9\xb2\x05\x5d\xab\xbe\x45\x0f\xfe\xb7\xfe\x7b\xb5\xdb\x86\x4d\xf6\x72\x1a\x07\xa7\x68\x5e\x17\xb0\xef\x7a\x08\xf6\xfa\xa7\x21\x36\xf3\x7c\x7d\xf8\x6b\x6c\xfc\xf6\x4f\x00\x00\x00\xff\xff\x4a\x21\xf8\x9d\x3a\x0a\x00\x00")

func templateHttpReadTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpReadTmpl,
		"template/http/read.tmpl",
	)
}

func templateHttpReadTmpl() (*asset, error) {
	bytes, err := templateHttpReadTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/read.tmpl", size: 2618, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpRelationsTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x58\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\x71\x13\x82\x41\x0e\x64\xfa\xdd\x40\x1f\xb6\xc6\xed\x8c\x75\x49\xd7\x64\xc8\xc3\x30\xa0\x8c\x78\x92\xb8\xd0\x47\xf9\x48\x35\x71\x5d\xfd\xef\x03\x25\xd9\xb1\x63\x29\x6b\x97\x04\x58\x09\x14\xad\xad\xef\x7e\xf0\xbb\xbb\x4f\xe7\xae\xd7\x93\x13\xc8\xad\x5f\x95\x38\x05\x24\x9f\x5b\xa1\xed\x04\xc9\x87\x3f\xe9\x24\x47\x12\x6f\x59\x96\x05\x9c\x4c\xea\xfa\xe8\x68\xbd\x06\x85\x99\x26\x84\xa8\xf0\xbe\x9c\x30\x1a\xe9\xb5\x25\x17\x41\x5d\x1f\x01\x00\xac\xd7\x63\xb8\xd5\xbe\x00\xbc\xf3\x48\x0a\x8e\x21\x7a\x2f\xd3\x1b\x99\x63\xd4\xda\x44\x30\xee\xa0\x2d\x1c\x3c\x2e\x4a\x23\x7d\x70\x89\x52\x21\x47\x20\xee\x9d\x41\xf0\x11\x22\x77\x1f\x8f\xcb\x9b\x1c\xa6\xaf\xe0\x5a\x3a\x84\x63\xf1\xda\x52\xa6\x73\xd1\x45\xd8\x31\x63\x49\x39\xc2\x31\x05\xec\xb1\x38\xb3\x0a\x1d\xec\x87\xed\x10\xd8\x20\x48\xcc\x54\xbe\x0f\x09\x67\x32\x69\x62\xa2\x38\x93\x0b\x84\x2f\x50\x4a\x97\x4a\x03\x75\x0d\x19\xfa\xb4\x40\x07\xbe\xc0\x6d\x5a\x75\x2d\x76\xd0\x75\x0d\xd2\x7b\x99\x16\xa8\xc0\xdb\x3e\x20\x6d\x80\x0f\x63\x6a\x85\xe4\x75\xa6\x51\xc1\xf5\x0a\x24\xe4\xfa\x13\x12\x54\x6c\xc6\xa5\x64\xb9\x40\x8f\x0c\x19\xdb\x45\xe3\x54\x49\x2f\x1b\x36\x24\x29\x60\x24\x85\xec\x40\xfb\x4d\xcc\xd4\x68\x24\x2f\xf6\x42\x64\x15\xa5\x10\x17\xb0\x97\xc4\x2f\x92\x94\x41\x1e\x0d\xdc\x38\xbe\x85\x50\x3d\xf1\x01\x5d\x69\xc9\xe1\x15\x6b\x8f\x9c\x00\xc3\x49\xf7\xfd\xb2\x42\xe7\x47\xb0\xde\x0b\x15\x8e\x09\x14\x17\xc2\xd8\x5c\x5c\x69\x5f\xc4\x9f\x65\x29\x2e\x3c\x6b\xca\xe3\x68\x81\xbe\xb0\x2a\x4a\x20\xea\x0f\x1b\x8d\x46\x07\xfe\x42\x8b\xed\x36\x8d\x29\x91\x27\x4d\x3b\x6a\x35\x0e\xbc\x8c\x2b\x36\x51\x28\xfe\x78\xd3\x39\x0f\x08\x7e\xcd\x18\x6c\x03\x3f\xcb\x0a\x79\x15\xc8\x6a\x2a\xba\x2d\xd3\x36\x93\x1b\xbc\x96\xd7\x87\xc5\xd4\x6e\x97\xbd\x7b\xd8\x41\xb4\x65\x7b\xf9\xae\x0c\x7b\x8c\x8b\xdf\x43\xec\x78\x24\xae\x0a\x64\x8c\xf7\xfc\x19\x7b\x8b\x1c\x30\xf3\xd3\x58\xab\xd1\xa8\xc5\x0e\x94\xa6\x9f\x22\x9d\x05\xf0\x1f\xa4\x97\xd5\x41\x93\xed\xe2\xda\x69\x0d\xed\x7f\x69\xdf\x59\xa9\x82\xd5\xe5\xaa\x44\x88\x18\xa5\x8a\x86\x4c\x3b\x2a\x67\x32\x47\x06\x13\xec\x1a\x1f\xe0\x0b\xe9\x41\x32\x02\xe3\xb2\xd2\x8c\x0a\x2c\x41\xf0\x04\xb6\x44\x6e\xd4\x42\x0c\x3a\x5c\xaf\xef\x87\xbf\x2f\xd7\x4e\x0d\xfa\x1e\x63\x02\xc8\x1c\xd8\x5e\x8a\x73\x32\xab\x98\x83\x3a\x78\xbc\xf3\x71\x4f\x0f\x85\xa3\xb3\xc6\xe2\x87\x57\x40\xda\xf4\xf4\xed\xe6\xb8\x5b\x1d\x5a\x03\x99\x45\x1c\x84\xb2\xaf\xc7\x37\x27\x0d\x93\x78\x12\x4a\x7d\x66\xfd\x1b\x5b\x91\x9a\x31\x5b\x9e\x0e\x1a\x84\xb3\x70\x8d\xa6\x39\xcf\xba\x9c\x91\x6f\x2c\x62\x64\xee\x4f\x7b\x73\x8c\x98\x53\x66\xe3\x85\xcb\x13\x08\x23\x35\x27\x1f\x47\x6d\x13\xcd\x4f\x37\x3d\x16\x25\xa0\xd5\xa8\x05\xdc\xfb\x7d\xdc\x71\x2b\x22\xdb\x0b\xc4\xb7\x09\x70\xd2\x64\x47\xb9\x13\x97\xac\x17\xef\x19\x33\x7d\x17\x5c\x75\x4e\x47\x09\x44\x48\x7e\x0a\x7d\xf3\xda\xcb\xcd\x85\xa6\xbc\x32\x92\x5f\x90\x9e\x16\xf8\x62\xfc\xfc\x2c\x55\x27\x7a\xcf\xc6\x90\xc2\x4c\x56\xc6\x3f\x4e\xc7\xe6\x62\x11\x86\xbf\x5a\xdd\xd2\x94\x77\xb2\x15\x26\xf7\x40\xbb\x9a\x97\x85\xba\x8e\x0e\x88\x78\x00\x14\xcf\x48\xcf\x9c\x3c\x32\x49\x73\x81\xfc\x09\xdb\x32\x77\x3c\x91\x36\xc3\x1e\x86\xc5\x86\xd1\x57\x4c\xbd\x8f\xfb\x8d\xd4\x56\x11\x5c\x81\xac\xb3\x4c\xfc\x26\xd9\x15\xd2\xc4\x3f\x6e\xbe\x38\x2f\x9b\xed\x65\x78\x9e\xe7\x94\x9a\x4a\xe1\x6c\x51\xfa\xd5\xa5\xcc\xa7\xe0\xb9\xc2\x64\x10\xfe\x96\x6d\x55\xba\x29\xfc\xf9\x57\xdb\x0c\xc3\x8e\x61\x57\x7d\x37\x75\xfb\x89\xc8\xfa\x76\xa1\x12\x33\x73\x73\x91\x16\xb8\x90\xe2\x03\x4a\xd5\x3a\xde\x5b\x9d\x86\x4e\x28\xed\xdf\x56\x13\xc4\x6d\x0e\x17\x46\xa7\x08\x62\x04\x1f\xa3\x24\xfa\x18\x8a\xfa\xaf\x49\xa1\x71\xf8\xd5\xb1\x06\x9a\xee\x2b\xa2\x90\x7a\x34\x48\xdd\xcf\x73\x9d\x00\x3e\x4d\xd0\xb7\x13\xe4\x90\xb5\x34\xfa\x73\x43\x39\x34\xf3\x74\x38\x23\x7b\xd3\x80\x62\xe7\xc6\xf3\xd3\xb0\xc7\x54\xa9\x7f\xa3\xd1\x84\x17\xd3\x37\x4c\xca\xd3\xa6\xe4\x9b\x67\xa1\x7b\x59\x3c\x52\xaf\x2e\x23\x54\x4f\x63\xa0\x3f\xe7\xee\xb6\xe7\xbf\x76\x97\x53\xfd\x2b\x4b\xd3\x77\xff\x69\x55\x31\xda\xf9\xe7\x59\x55\x82\xa7\x67\x5c\x55\x06\x9f\xf7\x6f\xb0\xa5\xcc\x35\x35\x91\xa3\xed\xe5\x7a\xb7\x58\xf8\xbe\x04\x8e\x06\xb4\xed\x9d\x76\xfe\xff\xac\x6d\x07\xaf\xc8\x17\x95\x35\xf7\xe2\xba\xf6\x1d\x4a\xd3\x17\x28\x4d\xc5\xed\xcf\xee\x3e\x8d\x92\x0b\x5b\x91\x8f\x12\x30\x48\x31\xba\xd1\x13\x25\xe8\xf0\x17\xc6\xde\x7f\x1b\xec\x3c\xbf\xff\xb4\xfd\xd7\x3f\x01\x00\x00\xff\xff\x96\xb2\x6c\x57\x4f\x11\x00\x00")

func templateHttpRelationsTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpRelationsTmpl,
		"template/http/relations.tmpl",
	)
}

func templateHttpRelationsTmpl() (*asset, error) {
	bytes, err := templateHttpRelationsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/relations.tmpl", size: 4431, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateHttpUpdateTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x5d\x6f\xdb\x3a\x12\x7d\xf7\xaf\x98\x15\x8c\x85\x94\xb5\xa9\xbb\x0f\xfb\x12\xa0\x58\xdc\xbd\xc9\x4d\x8d\x6d\x9b\x6e\x9d\x6e\x1f\x8a\x02\xa1\xc5\x91\xc4\x84\x26\x15\x92\x72\xea\x66\xfd\xdf\x17\x24\xe5\x0f\xc9\x92\x93\x76\xf7\x56\x40\x10\x5b\x1e\x0e\x0f\xcf\xcc\x9c\x19\x3e\x3d\xa5\x67\x50\x28\xbb\xae\xf0\x1c\x50\xda\x42\x11\xae\x52\x94\xd6\xfd\x65\x69\x81\x92\x5c\x69\x5a\x95\x70\x96\x6e\x36\xa3\xd1\xd3\x13\x30\xcc\xb9\x44\x88\x4a\x6b\xab\xb4\xae\x18\xb5\x18\xc1\x66\x33\x02\x00\x78\x7a\x9a\xc2\x23\xb7\x25\xe0\x57\x8b\x92\xc1\x18\xa2\xf7\x34\xbb\xa7\x05\x46\x61\x41\x04\xd3\xc6\x34\x98\x83\xc5\x65\x25\xa8\x75\xfe\x90\x32\xd4\x11\x90\xbd\x33\x70\x3e\x9a\x6f\x7c\x59\x29\x6d\x21\x06\x8f\xf8\xa6\xe4\x06\xb8\x01\x89\xc8\x90\x41\xae\x34\x18\x5b\x57\x9c\xc1\x7c\xf6\x6f\xd0\xb5\xc0\x00\x78\xbb\x53\x54\x70\x5b\xd6\x0b\x92\xa9\x65\x5a\xa8\x69\x56\xf2\xd4\xfd\xad\xfe\x16\x0d\x99\x54\x82\xae\x0b\xad\x6a\xc9\xd2\x15\x15\x9c\x51\xab\x74\xba\xfa\xeb\x2f\x61\x41\x32\xda\x42\x1c\x57\xf7\x05\x9c\xbf\x82\x05\x35\x08\x63\xf2\x9b\x92\x39\x2f\x48\x73\xea\x83\xa3\x68\x2a\x0b\x84\xb1\x74\xb6\x63\xf2\x4e\x31\x34\x70\x00\x30\x4d\xe1\x3d\x5d\x0b\x45\x19\xa8\x1c\xe8\xce\xf3\x66\x43\xdc\x47\x49\xde\xd1\xa5\x73\x07\x81\x71\xd0\xf8\x50\xa3\xb1\x64\xe7\xc0\x45\x10\x5a\xa6\x1f\xbd\xe5\x87\x60\x08\xc6\xea\x3a\xb3\xf0\xb4\x5b\x10\x70\x39\x2e\xaf\x2f\xae\xcf\xe1\x35\x5d\x71\x59\x00\x15\x02\x2a\xc5\xa5\x45\x6d\xa0\x44\x8d\x60\x10\x97\x06\xa4\xb2\xa0\x79\x51\x5a\x02\x6f\xe9\x7a\x81\x60\x5d\x04\x32\x2a\x61\x81\xc0\x94\x44\xe0\x12\xa8\x54\xb6\x44\x0d\x8f\x74\x0d\x84\x90\x76\x08\xda\x3c\xe4\x9e\x07\x49\x7e\xe7\x28\x98\x69\x65\xc5\x81\x31\xcf\xfd\xc6\xe3\x9c\xcc\x96\xcb\xda\xd2\x85\xc0\x5e\xd3\x6d\x2c\x72\x32\xf7\xc7\xf4\x5e\x1d\x5b\x67\xe1\xed\xcd\xba\x42\xf7\x93\x3b\xe1\x66\x73\x7b\x67\x94\x3c\x8f\x9c\x7f\xc9\xf0\x2b\xc4\xa6\x12\xdc\x42\x6c\x69\xf1\x46\xa9\xfb\xba\xda\x3b\xba\xa1\x05\x44\xce\x3c\x4a\x20\x9a\x44\x09\xfc\x02\x9b\x4d\x34\xb0\x7f\x93\xfb\x4d\xba\x70\x25\x6f\x68\x61\x9c\xaf\x5f\xa5\x54\xd6\xbf\x31\xe4\x52\xdc\x43\xb4\x2f\x9b\xad\x35\x7a\x3c\x2e\xf7\xa3\x5d\xde\xdf\xf6\x50\x32\x3d\xac\x89\x83\xa3\xbb\xb7\x5d\x66\xf6\x6c\x63\xc3\xf6\x25\x2b\x70\x90\xec\x31\x76\xd8\x0b\x01\x18\x23\xf9\x28\xf9\x43\xed\x52\xca\xd1\x89\xc2\xb8\x8f\x9f\xbf\xec\x70\x86\xb5\x9e\xe3\xd9\x45\x87\x6b\x78\x01\xd9\xf8\x7d\x64\x0f\x12\x8d\xff\x1f\xa2\xdb\xba\xe3\x9e\xcd\xe8\xb0\x4e\x43\x5d\x35\x85\x68\x80\x42\xc1\x57\x28\x87\x2b\x96\x4a\x06\x86\xae\xd0\x80\x2d\x11\xb2\xd2\x85\xc4\x80\x55\xfe\x2b\xa3\x96\x3a\xe9\xd8\x17\x72\x5e\xcb\x0c\xe2\xb2\x5d\xcb\xaf\xa9\x64\x02\x75\xd2\x6c\x1e\x3f\x82\x53\x53\xf2\x01\x4d\xa5\xa4\xc1\x4f\x9a\x5b\xd4\x13\xd0\x70\xd6\xbc\xf7\x45\x9f\x74\xca\x5d\xb8\x34\x28\x89\x50\x05\xf9\xc4\x6d\x19\x7f\xa3\x55\x13\xa9\x38\x5a\xa2\x2d\x15\x8b\x26\x10\x85\x2d\xa2\x24\x19\x75\x59\x3f\x14\x6b\x51\xa1\x4e\x7d\x0f\xe0\x6c\x9a\x6b\xb5\x9c\xd6\x5a\x44\x4e\xe0\x5c\x7a\xb5\x96\xa6\x29\x5c\xa1\xf5\xc7\xad\x94\xb1\xfe\xcc\xa4\x65\xb1\xa2\x1a\xd8\x09\xf5\x7a\x21\x12\x86\x99\x62\x38\xa5\x92\x4d\xb7\xd1\x9e\x36\x42\x39\x5d\x28\xb6\x1e\x84\x37\xa7\x2b\xdc\x85\xa3\x0d\x6d\x11\x38\xcb\x04\x47\x69\xdb\x91\x25\x01\xe3\xb5\xc4\xd9\x45\xdc\x14\x8b\x74\x25\xf0\x9a\x9a\x2b\xe5\xea\xa0\x29\x0e\xb9\xad\x0b\xd8\x6c\x62\xce\x92\x7d\x15\x71\xb6\xcb\xb6\xa4\x0b\x2a\xe8\xf2\x63\x49\x2d\xd0\x85\xaa\x2d\x18\xc1\x33\x84\x3c\x28\xa6\x75\xef\x4b\x87\x3b\xab\x8d\x55\x4b\x58\x52\x6d\x4a\x2a\x04\x6a\xf3\xf7\x9f\x26\xba\x3c\x07\x46\x7a\x95\xf7\x4f\xaf\x40\x72\xd1\x49\xc0\x16\xb1\x64\x8e\xb6\x6f\x69\x7c\xd6\xef\x32\x09\xed\xca\x2a\xa6\x60\xfa\x63\xbc\x1c\x77\xa4\xed\xd3\xcb\xc4\x80\xa8\xfe\xaf\x5a\xbb\x23\xad\x2b\xb8\xa7\x49\xeb\xca\xf1\x50\x4c\x02\xb9\xc1\xff\xdb\x3a\xc8\xe1\x1c\xed\x01\xb3\xdd\x7d\x93\xa1\xfd\x7c\x96\x7e\xcf\x3e\xbf\x09\xa4\xda\xed\x94\x74\x7e\xf8\x95\xf9\xd0\xf6\xef\x4f\x08\x19\x82\xd0\xdb\xef\xe0\x28\x60\x03\x51\x71\xa5\x6d\x95\xf6\xc3\xc9\xb1\xd2\xba\x07\x27\x80\x5a\xfb\x01\x8e\x38\x15\x88\xb5\x1b\xe1\x2c\x7e\xb5\x71\x47\x00\x79\xee\x2d\x07\x43\x64\x1e\xb9\xcd\x4a\x67\x43\x62\x37\x8c\x75\xc5\x77\xfb\x64\x6e\x50\x3c\x73\x62\xf2\x4e\xd9\xdf\xdd\x80\x79\xa9\xb5\xd2\xe7\x83\x1c\x0b\x32\x93\xb9\x8a\xa3\x03\xed\xf9\x0f\xdc\xe3\x82\x2e\x5c\xca\xb8\x52\xcd\x9d\x97\x68\x02\x4e\xcf\x67\xd2\x6e\x4d\x67\x17\x5b\xa5\x8a\x26\xc0\x59\x12\x0c\xfc\x6e\x31\x6a\x9d\xf4\x73\xee\x1e\x8d\x92\xa1\xde\x01\x8c\x1f\x27\xa0\x27\xf0\x2c\x82\x7e\x87\xad\x03\xcf\xb9\x2c\x6a\x41\xf5\xb3\x67\x0e\x30\x23\x56\x57\x82\x67\x4e\xe9\x51\x5a\xbd\xf6\x93\x7e\x2f\x8c\x3f\xe0\xf8\xff\xa0\xac\xe9\x3f\x5b\x02\xf6\x68\xfa\xa9\x08\x18\xfd\x70\xc2\x19\x44\xf0\x17\x37\x76\x67\x4a\xae\xc8\xcc\x2a\x1a\x23\xd9\x21\xeb\x14\x60\x3f\x16\x86\x39\xad\x85\x7d\x01\x4d\xe8\xfe\xb9\x29\xc3\x4d\x5d\x3f\x8b\x9f\x99\xbb\x25\x48\x2a\xe6\xa8\x57\x18\x22\xda\x10\x25\xb9\x38\x5e\x7d\x5c\xc3\x1a\x6d\xad\xe5\x68\xd8\x28\x4d\xe1\x03\xfa\x4b\x91\x67\xb6\x5d\xba\x0f\x27\x3a\xf3\xbf\x6a\xd4\xeb\x38\x21\x9f\xdc\x15\x26\x6e\x11\x22\xd4\x23\x3a\x89\x22\xb3\x8b\x93\x01\x39\x9a\x39\xc2\xc5\xd6\xa9\xfa\x8d\x7a\xe3\x30\x8d\x25\x44\x99\xc6\xc3\x0b\x70\x07\xfc\x25\x2d\x50\x43\x38\x80\x6f\x07\xbe\x3b\x51\x1d\xee\x6f\x5c\x23\x03\x25\xb7\x57\x3a\x55\xa1\xf6\x5a\x49\xfa\x7a\x11\x39\x1e\xfa\x7b\xb5\xb1\x11\xb4\x57\xf0\x40\xae\xa5\x58\xb7\xf5\xec\x85\x73\x94\xf6\x9c\xa7\x3e\xa9\xa6\xa5\x1b\x3d\xb9\x2c\xdc\xcd\xfc\x68\x76\xba\xdb\xc9\xa7\x29\x51\xf3\x3c\x27\x6f\x43\xbb\x8d\xff\xbc\x7d\x71\x5d\xf9\x79\xfc\x58\x0c\x67\x32\x13\x35\xc3\xcb\x65\x65\xd7\x37\xb4\x38\x07\xab\x6b\x9c\x1c\x99\x5d\x69\x55\x57\xe6\x1c\x3e\x7f\x31\x7e\x54\x1d\x6a\x8e\x4d\x80\xc6\xb2\x7b\x0b\x98\x67\x25\x2e\x69\x33\xac\x05\x6f\x27\x7b\x9a\x2b\x8f\x3b\xc5\x25\xc4\x61\xc3\xb9\x1f\x2f\x48\x02\xb7\xd1\x24\xba\x3d\x79\xff\x7b\xb6\x5f\xf6\x4b\xe8\x09\x87\x3d\x4d\xcd\x3d\x9b\x36\x4f\x9b\x09\xe0\xf7\x75\xab\x9d\x72\x18\xd4\x9c\x0a\xfe\xcd\xf3\x05\x3e\xe4\xcf\x48\xc5\x70\xd1\x3c\xaf\x20\x3f\xa6\x1c\xcf\xea\xc4\xe9\x16\x19\x36\xc5\xe7\x3a\xe4\x4b\xd5\xb9\x39\xc3\xf5\x3f\x1b\xc8\x77\xc9\xa8\x8d\x6a\x7f\x81\xdc\x7d\xfa\x6f\x00\x00\x00\xff\xff\x79\x07\xc6\xe9\x67\x13\x00\x00")

func templateHttpUpdateTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateHttpUpdateTmpl,
		"template/http/update.tmpl",
	)
}

func templateHttpUpdateTmpl() (*asset, error) {
	bytes, err := templateHttpUpdateTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/http/update.tmpl", size: 4967, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/http/create.tmpl":    templateHttpCreateTmpl,
	"template/http/delete.tmpl":    templateHttpDeleteTmpl,
	"template/http/handler.tmpl":   templateHttpHandlerTmpl,
	"template/http/helpers.tmpl":   templateHttpHelpersTmpl,
	"template/http/list.tmpl":      templateHttpListTmpl,
	"template/http/read.tmpl":      templateHttpReadTmpl,
	"template/http/relations.tmpl": templateHttpRelationsTmpl,
	"template/http/update.tmpl":    templateHttpUpdateTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"http": &bintree{nil, map[string]*bintree{
			"create.tmpl":    &bintree{templateHttpCreateTmpl, map[string]*bintree{}},
			"delete.tmpl":    &bintree{templateHttpDeleteTmpl, map[string]*bintree{}},
			"handler.tmpl":   &bintree{templateHttpHandlerTmpl, map[string]*bintree{}},
			"helpers.tmpl":   &bintree{templateHttpHelpersTmpl, map[string]*bintree{}},
			"list.tmpl":      &bintree{templateHttpListTmpl, map[string]*bintree{}},
			"read.tmpl":      &bintree{templateHttpReadTmpl, map[string]*bintree{}},
			"relations.tmpl": &bintree{templateHttpRelationsTmpl, map[string]*bintree{}},
			"update.tmpl":    &bintree{templateHttpUpdateTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
